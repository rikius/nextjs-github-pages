name: setup-node
description: "Setup Node.js ⚙️ - Cache dependencies ⚡ - Install dependencies 🔧"
outputs:
  manager:
    description: "what package namanger will be used"
    value: ${{ steps.detect-package-manager.outputs.manager }}
  command:
    description: "default package install command"
    value: ${{ steps.detect-package-manager.outputs.command }}
  runner:
    description: "runner of action"
    value: ${{ steps.detect-package-manager.outputs.runner }}
runs:
  using: "composite"
  steps:
      - name: Detect package manager
        id: detect-package-manager
        shell: bash
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=pnpm" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v3
        if: ${{ steps.detect-package-manager.outputs.manager == 'pnpm' }}
        name: Install pnpm package if needed
        with:
          version: 8
          run_install: false

      - name: Restore cache ⚡
        id: cache_dependencies
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', '**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]sx?') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml', '**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies 🔧
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        shell: bash
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
